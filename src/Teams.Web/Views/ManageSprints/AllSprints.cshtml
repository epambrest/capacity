@model Teams.Web.ViewModels.Sprint.SprintAndTeamViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewBag.Title = "Sprints";
}

<script src="https://kit.fontawesome.com/8519ed4a13.js" crossorigin="anonymous"></script>

<style>
    tbody tr:hover {
        background: rgba(0, 0, 0, 0.20);
        color: #fff;
    }
</style>

<div style="margin: 10px 0px 0px 30px" align="left">
    <h><i class="fas fa-arrow-left"></i><a color="black">@Html.ActionLink($" {Localizer["ReturnTeams"].Value}", "GetMyTeams", "ManageTeams")</a></h>
</div>

<h1 class="text-center font-weight-normal mt-5 mb-3">@Model.Team.TeamName</h1>

<div sstyle="display: inline-block">
    <table align="left" style="width:50%" class="table" id="grid">
        <thead>
            <tr align="center">
                <td align="left" style="border-top: hidden" width="1%"></td>
                <td align="left" style="border-top: hidden; font-weight: bold">@Localizer["NameOfSprint"]</td>
                <td align="left" style="border-top: hidden; font-weight: bold">@Localizer["DaysInSprint"]</td>
                <td align="left" style="border-top: hidden; font-weight: bold">@Localizer["StoryPointInHours"]</td>
                <td align="left" style="border-top: hidden; font-weight: bold"></td>
                @{
                    bool IsActiveSprintWas = false;
                    bool IsCreatedSprintWas = false;
                }
                @foreach (var item in Model.Sprints)
                {
                    if (item.Status == PossibleStatuses.CreatedStatus)
                        IsCreatedSprintWas = true;
                    else if (item.Status == PossibleStatuses.ActiveStatus)
                        IsActiveSprintWas = true;
                }
                @if (Model.IsOwner)
                {
                    <td style="border-top: hidden;" align="right">
                        <form>
                            <input type="hidden" name="teamId" value="@Model.Team.Id" />
                            @if (IsCreatedSprintWas == false)
                            {
                                <button type='submit' class='btn btn-outline-primary border-0' asp-action="AddSprint">
                                    <i class="fas fa-plus"></i>
                                </button>
                            }
                            else
                            {
                                <button type='submit' class='btn btn-outline-secondary border-0' data-toggle="tooltip" data-placement="top" title="@Localizer["YouCantAddSprint"]" disabled>
                                    <i class="fas fa-plus"></i>
                                </button>
                            }
                        </form>
                    </td>
                }
                <td style="border-top: hidden;" align="right">
                    <button type='submit' class='btn btn-outline-primary border-0' OnClick="CompareSprints()">@Localizer["CompareSprints"]</button>
                </td>
            </tr>
        </thead>

        @foreach (var item in Model.Sprints)
        {
            <tbody>
                <tr align="center">
                    @if (item.Status == PossibleStatuses.ActiveStatus)
                    {
                        <td class="colorBlock" align="left" width="1%" bgcolor="green"></td>
                    }
                    else if (item.Status == PossibleStatuses.CompletedStatus)
                    {
                        <td class="colorBlock" align="left" width="1%" bgcolor="yellow"><input type="checkbox" class="checkBox" OnChange="SetCheckBox(event)" name="IsCompareChecked" id="@item.Id"></td>
                    }
                    else if (item.Status == PossibleStatuses.CreatedStatus)
                    {
                        <td class="colorBlock" align="left" width="1%" bgcolor="blue"></td>
                    }
                    <td align="left" data-type="@item.Id">@Html.ActionLink(item.Name, "GetSprintById", new { sprintId = item.Id })</td>
                    <td align="left" data-type="@item.Id">@item.DaysInSprint</td>
                    <td align="left" data-type="@item.Id">@item.StoryPointInHours</td>
                    @if (Model.IsOwner)
                    {
                        <td align="right" data-type="@item.Id">
                            <form>
                                <input type="hidden" name="sprintId" value="@item.Id" />
                                <button type='submit' class='btn btn-outline-primary border-0' asp-action="EditSprint">
                                    <i class="fas fa-pen"></i>
                                </button>
                            </form>
                        </td>
                        <td align="right" data-type="@item.Id">
                            <button id="deleteButton" type='button' class='btn btn-outline-danger border-0' data-toggle="modal" data-target="#myModal"
                                    data-content="@item.Name" data-whatever="@item.Id">
                                <i class='far fa-trash-alt'></i>
                            </button>
                        </td>
                        @if (item.Status == PossibleStatuses.CreatedStatus)
                        {
                            <td align="center" data-type="@item.Id">
                                @if (IsActiveSprintWas == false)
                                {
                                    <button id="setActiveteStatus" type='button' class='btn btn-outline-success border-0' data-toggle="modal" data-target="#myModal"
                                            data-content="@item.Name" data-whatever="@item.Id">
                                        @Localizer["StartSprint"]
                                    </button>
                                }
                                else
                                {
                                    <button type="button" class="btn btn-outline-secondary border-0" data-toggle="tooltip" data-placement="right" title="@Localizer["YouCantSetActive"]" disabled>
                                        @Localizer["StartSprint"]
                                    </button>
                                }
                            </td>
                        }
                        else if (item.Status == PossibleStatuses.ActiveStatus)
                        {
                            <td align="center" data-type="@item.Id">
                                <button id="setCompleteStatus" type='button' class='btn btn-outline-warning border-0' data-toggle="modal" data-target="#myModal"
                                        data-content="@item.Name" data-whatever="@item.Id">
                                    @Localizer["CompleteSprint"]
                                </button>
                            </td>
                            IsActiveSprintWas = true;
                        }
                    }
                </tr>
            </tbody>
        }
    </table>
</div>

<form id="workingDaysPartial">
    <partial name="~/Views/ManageMemberWorkingDays/_WorkingDaysPartial.cshtml" model="Model">
</form>

<div>
    <table align="right" style="width:40%; border: 2px solid black" class="table">
        <thead>
            <tr align="center">
                <td align="center" style="font-weight: bold">@Localizer["AllStoryPoints"]</td>
                <td align="center" style="font-weight: bold">@Localizer["StoryPointsOfCompletedTasks"]</td>
                <td align="center" style="font-weight: bold">@Localizer["AllTasks"]</td>
                <td align="center" style="font-weight: bold">@Localizer["CompletedTasks"]</td>
            </tr>
        </thead>
        <tbody>
            <tr align="center">
                <td>@Model.SumAllStoryPoints</td>
                <td>@Model.SumStoryPointsOfCompletedTasks</td>
                <td>@Model.SumAllTasks</td>
                <td>@Model.SumCompletedTasks</td>
            </tr>
        </tbody>
    </table>
    </div>

<form>
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div id="modalDialogBlock" class="modal-body">
                    <p align="center" id="sprint"></p>
                    <input type="hidden" id="sprintId" name="sprintId" value="" />
                </div>
                <div class="modal-footer">
                    <button type="submit" id="submitModalButton" class="btn btn-outline-secondary" asp-action="Remove">OK</button>
                    <button type="button" class="btn btn-outline-danger" data-dismiss="modal">@Localizer["Cancel"]</button>
                </div>
            </div>
        </div>
    </div>
</form>

<script>
    $(document).ready(function () {
        $("#myModal").on("show.bs.modal", function (event) {
            var button = $(event.relatedTarget)
            let elemId = event.relatedTarget.id;
            var sprint = button.data('content')
            var sprintId = button.data('whatever')
            var modal = $("#myModal");
            modal.find("#sprintId").val(sprintId);
            let submitModalButton = document.querySelector("#submitModalButton");
            let inputStatus = document.querySelector('[name = "status"]');
            if (elemId == "deleteButton") {
                if (inputStatus != null)
                    inputStatus.parentNode.removeChild(inputStatus);
                document.getElementById('sprint').innerHTML = "@Localizer["Remove"]" + "<strong>" + sprint + "</strong>" + "?";
                submitModalButton.setAttribute('formaction', '/ManageSprints/Remove');
                return;
            }
            else if (elemId == "setActiveteStatus" || elemId == "setCompleteStatus") {
                submitModalButton.setAttribute('formaction', '/ManageSprints/ChangeStatusSprint');
                if (inputStatus == null) {
                    console.log(inputStatus);
                    let modalDialogBlock = document.querySelector("#modalDialogBlock");
                    inputStatus = document.createElement('input');
                    inputStatus.setAttribute('type', 'hidden');
                    inputStatus.setAttribute('name', 'status');
                    modalDialogBlock.appendChild(inputStatus);
                }
                if (elemId == "setActiveteStatus") {
                    document.getElementById('sprint').innerHTML = "@Localizer["AcceptSetActiveStatus"]" + "<strong>" + sprint + "</strong>";
                    inputStatus.setAttribute('value', '1');
                    console.log(inputStatus);
                }
                else if (elemId == "setCompleteStatus") {
                    document.getElementById('sprint').innerHTML = "@Localizer["AcceptCompletedStatus"]" + "<strong>" + sprint + "</strong>";
                    inputStatus.setAttribute('value', '2');
                }
            }
        });
    });

    function SetCheckBox(event) {
        var checkBoxes = document.querySelectorAll('.checkBox');
        if (checkBoxes.length > 0) {
            var checkedCheckBoxes = Array.from(checkBoxes).filter(element => {
                return element.checked == true
            });
            if (checkedCheckBoxes.length > 5) {
                event.currentTarget.checked = false;
                alert("Possible to choose no more than 5 sprints");
                event.currentTarget.value = "false";
            }
        }
        event.currentTarget.value = "true";
    }

    function CompareSprints() {
        let checkBoxes = document.querySelectorAll('.checkBox');
        if (checkBoxes == null) return;
        const checkedSprintsId = [];
        Array.from(checkBoxes).forEach(element => {
            if (element.checked == true)
                checkedSprintsId.push(element.id);
        });
        if (checkedSprintsId.length == 0) {
            alert("Please, choose sprints")
            return;
        }
        let form = document.createElement('form');
        form.action = 'CompareSprints';
        form.method = 'GET';
        for (var i = 0; i < checkedSprintsId.length; i++) {
            let input = document.createElement('input');
            input.type = "hidden"
            input.id = "sprintsId";
            input.name = "sprintsId";
            input.value = checkedSprintsId[i];
            form.appendChild(input);
        }
        document.body.append(form);
        form.submit();
    }

    grid.onclick = function (e) {
        if (e.target.tagName != 'TD') return;
        if (e.target.classList.contains("colorBlock")) return;
        let th = e.target;
        var sprintId = th.dataset.type;
        $.ajax({
                type: "Get",
                url: "/ManageMemberWorkingDays/GetAllWorkingDays/",
                data: "sprintId=" + sprintId,
                dataType: "html",
                success: function (data) {
                    $('#workingDaysPartial').html(data);
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
    };

</script>

